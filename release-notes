v0.8.47
----------------------------
* copy only own properties in a mixin
* remove "evil twins" http://archive.oreilly.com/pub/a/javascript/excerpts/javascript-good-parts/bad-parts.html
* $.type to typeof
* remove function creation inside loop - ajax request
* change view property "appendContent" to "appendTarget"
* bug fix when another function with "callParent" abilities within a "callParent" call
* view now has a "enclosedBind" property to bind the data to the element but not the target the element is rendered to - wraps element/view with its own div
* fix submit function on stores

v0.8.35
----------------------------
* add Firebrick.classes.overwrite to overwrite defined classes
* removed view references to Firebrick.ui and placed them in the ui framework
* "extend" bug fix for overwriting functions to primitives
* fix arguments bug when calling this.callParent(arguments)
* add arguments parameter to all "callParent" calls
* activate jshint and "use strict"
* only init store view if the store is already set
* change $.each loops to "for" loops - performance : http://jsperf.com/loops/188 - http://jsperf.com/lodash-each-vs-object-keys/6 - http://jsperf.com/fastest-array-loops-in-javascript/287
* check if mixin has been injected with ".hasMixin({String}) function"


v0.8.27
----------------------------
* bootstrap dependency removed and moved to firebrick.ui
* css file removed

v0.8.25
----------------------------
* comment typo
* allow use of mixins for classes by injecting them when classes are defined
* classes now have a constructor function - this is called when defining the class
* changed function "mixinFor" to "merge"

v0.8.21
----------------------------
* minor changes
* documentation

v0.8.20
----------------------------
* fb.text accepts a function as well

v0.8.19
----------------------------
* overwrite/mixin function deep option
* firebrick.require returns and object of responses when requiring multiple files
* add utils function mixinFor - iterate all parents of an object and mix the object properties and values for a specified property name together
* bower json update (typo)
* create a view "on-the-fly" by not passing a name when using Firebrick.createView({...})
* bug fix amd load where firebrick was not returned
* remove redundant extend function utils.extend - use classes.extend instead
* a view tpl parameter that is a function (rather than an html string) is executed and returned before it is rendered ...in the init stage
* add passEvent function to classes
* when using listeners:{} to declare event listeners in a class default the scope to itself if listeners.scope is not defined
* when lang key is not found, return the unmodified key
* Firebrick UI support in views with use of the "items" parameter
* .contains is not supported in IE - change to indexOf
* add event "beforeRender" to views
* added parameter "appendContent", when the view is rendered, if true the view html is appended to the target instead of overwriting its contents
* fix when bug when creating a class on-the-fly without name .create({...})

v0.8.4
----------------------------
* fix the shortcut Firebrick.createStore("MyStore", {...}) when creating a store "on-the-fly"
* update bower jquery dep from ~2.0.0 to ~2.1.1
* added shortcut createController() - saves using having to define extend property "Firebrick.controller.Base"
* fix bug viewReady not fired when creating view/Index.html

v0.8.0
----------------------------
* internal changes on how create and define work
* javascript prototype oop when using create and define and not mixin
* calling create() on an already created object returns the original object and uses the second "config" argument as a mixin
* change "destroyed" event to "unbound"
* call render() to re-render an "unbound" view
* createView and defineView are shortcuts of create() and define()
* viewRegistry removed and merged with classRegistry
* getViewById removed - use getById()
* getView removed - use get()
* dashboard demo update

v0.7.8
----------------------------
* cache function overlooked when loading store 

v0.7.7
----------------------------
* when defining the root parameter in a store - this will be taken into account when calling getData()
* firebrick dev mode so that requirejs errors are output to console 
* clear up ready function internal
* change "Firebrick.view" to "views"
* views are loaded asynchronously by default
* views can be loaded synchronously by setting the parameter false
* pass the store as first argument in load callback

v0.6.1
----------------------------
* stores load by default asynchronously
* fix typo bug with setInterval
* interval big fixes
* language keys are loaded asynchronously
* added ko to fb argument
* firebrick uses requirejs
* fix event memory leak

v0.5.0
----------------------------
* allow an object of events to be passed to .on() - controller/view for example
* fix passing data to index view
* fix "destroy" event on views
* fire event "ready" when all inits on a class(constructor, view, store) has been called
* ability to update views with new data
* changed initialData to viewData
* ability to define subviews of a view
* listeners object to classes so that you can add listeners when creating or defining an object without having to create the init function
* memory leak fixes when calling create or createView on the same object multiple times
* allow a language JSON to be called and change the language of the views using knockout
* add window.fb for shortcut access, handy for fb.text() in templates

v0.4.4
----------------------------
* improved hash routing
* allow interval functions to be created and removed Firebrick.utils.setInterval() && Firebrick.utils.clearInterval() with custom ids
* fix memory leak with event firing per class

v0.4.0
----------------------------
* fix cleanNode error with invalid target
* improve how files are required and loaded
* implement requirejs
* autoLoad store parameter - defaults to false
* records removed completely and from stores - data made observable into the store when created
* added dashboard example


v0.3.1
----------------------------
* fix so that files can only be required once

v0.3.0
----------------------------
* showLoading parameter default value to true
* replace javascript reserved word extends to extend
* fix bug where all define() object required function hasDependencies()
* fire event viewRendered when view is rendered :)
* clear view so that you can dynamically change the content of an item with a new template and data

v0.2.0
----------------------------
* added splash screen option before initial view is rendered
* fixed that Firebrick.ready({require:...}) can also be a string
* added event "main-viewRendered" when Index.html from Firebrick.ready is auto rendered
* add the ability to show a loader whilst the view is loading
* bootstrap dependency added
* path builder bug fix
* bug fix create store with no extra config options
* rename view bind parameter from data to store (data is deprecated)
* fix registering this.app.on events where the controller was passed into the event construction
* fix so that events are truly registered even when there page has not finished loading
* changed from rivets to knockout js
