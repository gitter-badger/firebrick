{
    "project": {
        "name": "Firebrick JS API",
        "description": "Firebrick JS API: A lightweight JavaScript MVC Framework powered with jQuery, Bootstrap, Knockout JS and Require JS",
        "version": "0.8.25",
        "url": "https://github.com/smasala",
        "logo": "../fb_small.png"
    },
    "files": {
        "src\\firebrick.js": {
            "name": "src\\firebrick.js",
            "modules": {
                "Firebrick": 1,
                "Firebrick.class": 1,
                "Global": 1
            },
            "classes": {
                "Firebrick": 1,
                "Classes": 1,
                "Controllers": 1,
                "Templates": 1,
                "Views": 1,
                "Boot": 1,
                "Utils": 1,
                "Languages": 1,
                "Events": 1,
                "Data": 1,
                "Data.Store": 1,
                "Router": 1,
                "class.Base": 1,
                "view.Base": 1,
                "controller.Base": 1,
                "store.Base": 1,
                "window": 1
            },
            "fors": {
                "Firebrick": 1,
                "Data": 1
            },
            "namespaces": {
                "Data": 1
            }
        }
    },
    "modules": {
        "Firebrick": {
            "name": "Firebrick",
            "submodules": {},
            "classes": {
                "Firebrick": 1,
                "Classes": 1,
                "Controllers": 1,
                "Templates": 1,
                "Views": 1,
                "Boot": 1,
                "Utils": 1,
                "Languages": 1,
                "Events": 1,
                "Data": 1,
                "Data.Store": 1,
                "Router": 1
            },
            "fors": {
                "Firebrick": 1,
                "Data": 1
            },
            "namespaces": {
                "Data": 1
            },
            "tag": "module",
            "file": "src\\firebrick.js",
            "line": 1497,
            "description": "A lightweight JavaScript MVC Framework powered with jQuery, Knockout JS and Require JS"
        },
        "Firebrick.class": {
            "name": "Firebrick.class",
            "submodules": {},
            "classes": {
                "class.Base": 1,
                "view.Base": 1,
                "controller.Base": 1,
                "store.Base": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\firebrick.js",
            "line": 2220
        },
        "Global": {
            "name": "Global",
            "submodules": {},
            "classes": {
                "window": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\firebrick.js",
            "line": 2446
        }
    },
    "classes": {
        "Firebrick": {
            "name": "Firebrick",
            "shortname": "Firebrick",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 27,
            "description": "A lightweight JavaScript MVC Framework powered with jQuery, Knockout JS and Require JS"
        },
        "Classes": {
            "name": "Classes",
            "shortname": "Classes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 238
        },
        "Controllers": {
            "name": "Controllers",
            "shortname": "Controllers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 410
        },
        "Templates": {
            "name": "Templates",
            "shortname": "Templates",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 429
        },
        "Views": {
            "name": "Views",
            "shortname": "Views",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 441
        },
        "Boot": {
            "name": "Boot",
            "shortname": "Boot",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 628
        },
        "Utils": {
            "name": "Utils",
            "shortname": "Utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 673
        },
        "Languages": {
            "name": "Languages",
            "shortname": "Languages",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 1014
        },
        "Events": {
            "name": "Events",
            "shortname": "Events",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 1105
        },
        "Data": {
            "name": "Data",
            "shortname": "Data",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "Data",
            "file": "src\\firebrick.js",
            "line": 1343
        },
        "Data.Store": {
            "name": "Data.Store",
            "shortname": "Data.Store",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "Data",
            "file": "src\\firebrick.js",
            "line": 1348
        },
        "Router": {
            "name": "Router",
            "shortname": "Router",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 1497
        },
        "class.Base": {
            "name": "class.Base",
            "shortname": "class.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick.class",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 1574
        },
        "view.Base": {
            "name": "view.Base",
            "shortname": "view.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick.class",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 1769,
            "description": "Extends {{#crossLink Firebrick.class.Base}}{{/crossLink}}",
            "extends": "class.Base"
        },
        "controller.Base": {
            "name": "controller.Base",
            "shortname": "controller.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick.class",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 2177,
            "description": "Extends {{#crossLink Firebrick.class.Base}}{{/crossLink}}",
            "extends": "class.Base"
        },
        "store.Base": {
            "name": "store.Base",
            "shortname": "store.Base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Firebrick.class",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 2220,
            "description": "Extends {{#crossLink Firebrick.class.Base}}{{/crossLink}}",
            "extends": "class.Base"
        },
        "window": {
            "name": "window",
            "shortname": "window",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Global",
            "namespace": "",
            "file": "src\\firebrick.js",
            "line": 2446
        }
    },
    "classitems": [
        {
            "file": "src\\firebrick.js",
            "line": 35,
            "itemtype": "property",
            "name": "version",
            "type": "{String}",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 41,
            "description": "used to store configurations set Firebrick.ready()",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "app",
            "type": "{Object}",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 52,
            "description": "ready function to kick start the application",
            "itemtype": "method",
            "name": "ready",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "go",
                            "description": "{Function} - called on document ready",
                            "type": "Object"
                        },
                        {
                            "name": "app",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "name of the app",
                                    "type": "Object"
                                },
                                {
                                    "name": "path",
                                    "description": "path of the app",
                                    "type": "Object"
                                }
                            ]
                        },
                        {
                            "name": "autoRender",
                            "description": "{Boolean} whether to call first view automatically  \"{app.name}.view.Index\",",
                            "type": "Object"
                        },
                        {
                            "name": "viewData",
                            "description": "{Object} viewData to be passed to the autoRender view,",
                            "type": "Object"
                        },
                        {
                            "name": "splash",
                            "description": "{String} - html or string to be rendered before the document is loaded - removed on document.ready",
                            "type": "Object"
                        },
                        {
                            "name": "require",
                            "description": "{String, Array of Strings} file(s) are required",
                            "type": "Object"
                        },
                        {
                            "name": "cache",
                            "description": "{Boolean} [cache=true] whether require should cache files or not,",
                            "type": "Object"
                        },
                        {
                            "name": "dev",
                            "description": "{Boolean} [dev=false] true to print requirejs exceptions to console",
                            "type": "Object"
                        },
                        {
                            "name": "lang",
                            "description": "language file name or store,",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 100,
            "itemtype": "method",
            "name": "shortcut",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "func",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "",
                    "type": "Args.."
                }
            ],
            "return": {
                "description": "",
                "type": "Many"
            },
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 112,
            "description": "shortcut for Firebrick.classes:get",
            "itemtype": "method",
            "name": "get",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 119,
            "description": "shortcut for Firebrick.classes:getById",
            "itemtype": "method",
            "name": "getById",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 126,
            "description": "shortcut for Firebrick.classes:create",
            "itemtype": "method",
            "name": "create",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 133,
            "description": "shortcut for Firebrick.classes:define",
            "itemtype": "method",
            "name": "define",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 140,
            "description": "shortcut for Firebrick.controllers.createController",
            "itemtype": "method",
            "name": "createController",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 147,
            "description": "shortcut for Firebrick.utils.require",
            "itemtype": "method",
            "name": "require",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 154,
            "description": "shortcut for Firebrick.views.loadRaw",
            "itemtype": "method",
            "name": "loadRaw",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 161,
            "description": "shortcut for Firebrick.views.createView",
            "itemtype": "method",
            "name": "createView",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 168,
            "description": "shortcut for Firebrick.views.defineView",
            "itemtype": "method",
            "name": "defineView",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 175,
            "description": "shortcut for Firebrick.views.getBody",
            "itemtype": "method",
            "name": "getBody",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 182,
            "description": "shortcut for Firebrick.utils.delay",
            "itemtype": "method",
            "name": "delay",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 189,
            "description": "shortcut for Firebrick.events.addListener",
            "itemtype": "method",
            "name": "addListener",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 196,
            "description": "shortcut for Firebrick.events.removeListener",
            "itemtype": "method",
            "name": "removeListener",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 203,
            "description": "shortcut for Firebrick.events.fireEvent",
            "itemtype": "method",
            "name": "fireEvent",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 210,
            "description": "shortcut for Firebrick.events.on",
            "itemtype": "method",
            "name": "on",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 217,
            "description": "shortcut for Firebrick.events.off",
            "itemtype": "method",
            "name": "off",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 224,
            "description": "shortcut for Firebrick.data.store.createStore",
            "itemtype": "method",
            "name": "createStore",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 231,
            "description": "shortcut for Firebrick.languages.getByKey",
            "itemtype": "method",
            "name": "text",
            "class": "Firebrick",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 244,
            "description": "Class Registry",
            "itemtype": "property",
            "name": "classRegistry",
            "access": "private",
            "tagname": "",
            "type": "{Object} map of all classes",
            "class": "Classes",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 252,
            "description": "returns a firebrick class by name from the registry",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Classes",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 262,
            "description": "get a class by property: classId",
            "itemtype": "method",
            "name": "getById",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Classes",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 282,
            "description": "pass a simple object and a super class that you wish to extend from OOP",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "_super",
                    "description": "object class",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "prototype of _super (i.e. obj which extends from _super",
                "type": "Object"
            },
            "class": "Classes",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 316,
            "description": "get or returns a firebrick class by name and calls init()",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "class",
                "type": "Object"
            },
            "class": "Classes",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 339,
            "itemtype": "method",
            "name": "_initMixins",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "clazz",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "mix",
                    "description": "optional used by recursive",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "clazz",
                "type": "Object"
            },
            "class": "Classes",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 378,
            "description": "define a firebrick class",
            "itemtype": "method",
            "name": "define",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "optional",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the newly created class",
                "type": "Object"
            },
            "class": "Classes",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 415,
            "description": "shorthand method. Same as calling Firebrick:create, however it sets the extend value on the config to \"Firebrick.controller.Base\" automatically",
            "itemtype": "method",
            "name": "createController",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "optional",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "class",
                "type": "Object"
            },
            "class": "Controllers",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 434,
            "description": "General loading tpl - override to change the loading mask\nBootstrap is needed for this to work",
            "itemtype": "property",
            "name": "loadingTpl",
            "class": "Templates",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 446,
            "description": "used by Firebrick.Boot:prepApplication to render the \"view/Index.html\" when autoRender is true",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "bootView",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "viewData",
                            "description": "to pass to the view Store parameter",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "Views",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 468,
            "description": "Create and render a view (shorthand function)",
            "itemtype": "method",
            "name": "createView",
            "params": [
                {
                    "name": "name",
                    "description": "example: \"MyApp.view.MyView\"",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "(optional) object to config the View class with",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Firebrick.view.Base class",
                "type": "Object"
            },
            "class": "Views",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 492,
            "description": "Note: different to Firebrick.define() for classes -\nFirebrick.defineView, defines and fetches if not already loaded the given view by name",
            "itemtype": "method",
            "name": "defineView",
            "params": [
                {
                    "name": "name",
                    "description": "name of the view to me shown \"MyApp.view.MyView\"",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "(optional) object to config the View class with",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Firebrick.view.Base class",
                "type": "Object"
            },
            "class": "Views",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 505,
            "description": "initialise subviews of a view",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "initSubViews",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "view passed",
                "type": "Object"
            },
            "class": "Views",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 528,
            "description": "used by initSubViews",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "internal_loadSubView",
            "params": [
                {
                    "name": "subView",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "subView passed",
                "type": "Object"
            },
            "class": "Views",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 552,
            "description": "load a file as raw HTML - syncronous function",
            "itemtype": "method",
            "name": "loadRaw",
            "params": [
                {
                    "name": "name",
                    "description": "not standard path but Firebrick namespace path: \"MyApp.views.MyView\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "html",
                "type": "String"
            },
            "class": "Views",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 566,
            "description": "Basic view configurations when defining/creating a view with shorthand function calls",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "basicViewConfigurations",
            "params": [
                {
                    "name": "config",
                    "description": "(optional)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Views",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 581,
            "description": "jQuery body object (cache) - is set initally by {{crossLink Firebrick.views:getBody}}{{/crossLink}}",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_body",
            "type": "{Object} jquery object",
            "class": "Views",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 588,
            "description": "Shortcut to get jQuery(\"body\")",
            "itemtype": "method",
            "name": "getBody",
            "params": [
                {
                    "name": "refresh",
                    "description": "[default=false] (optional) if true gets the body object fresh from dom and not from cache",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "jquery object",
                "type": "Object"
            },
            "class": "Views",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 601,
            "description": "find the target using a selector - same as jQuery(selector)",
            "itemtype": "method",
            "name": "getTarget",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String, jQuery Object"
                }
            ],
            "return": {
                "description": "jquery object || null",
                "type": "Object, Null"
            },
            "class": "Views",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 611,
            "description": "Render HTML or Template to the given target",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "renderTo",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "JQuery Object"
                },
                {
                    "name": "html",
                    "description": "template or html",
                    "type": "String"
                },
                {
                    "name": "append",
                    "description": "[default=false] if true will append to instead of overwriting content of target",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "target",
                "type": "JQuery Object"
            },
            "class": "Views",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 633,
            "description": "used by Firebrick:ready",
            "itemtype": "method",
            "name": "prepApplication",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "cache",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "dev",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "lang",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "autoRender",
                            "description": "",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "Boot",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 678,
            "description": "keep track of all require requests",
            "itemtype": "property",
            "name": "requiredFiles",
            "access": "private",
            "tagname": "",
            "type": "{Object} map",
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 685,
            "description": "keep track of all the interval functions running",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "intervalRegistry",
            "type": "{Object} map",
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 692,
            "description": "used by init&Clear Splash",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "splashCleared",
            "type": "{Object} map",
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 699,
            "description": "html is appended to the $(\"html\") tag before the document is ready \nused by Firebrick:ready",
            "example": [
                " \n\t\t\t\t\tFirebrick.ready({\n\t\t\t\t\t\tsplash:\"<div></div>\"\n\t\t\t\t\t});"
            ],
            "itemtype": "method",
            "name": "initSplash",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "html",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 718,
            "description": "removes splash tag $(\"#fb-splash\")",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "clearSplash",
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 727,
            "description": "overwrite properties in {obj1} with properties from {obj2} (mixin)",
            "itemtype": "method",
            "name": "overwrite",
            "params": [
                {
                    "name": "obj1",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "obj2",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "obj1 mixed in with obj2",
                "type": "Object"
            },
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 742,
            "description": "recursively iterate over prototypes and merge all the properties of an object together from its inherited parents for a specified property (name)",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "merge",
            "params": [
                {
                    "name": "propName",
                    "description": "name of property to merge",
                    "type": "String"
                },
                {
                    "name": "object",
                    "description": "object/class to iterate through",
                    "type": "Object"
                },
                {
                    "name": "a",
                    "description": "(optional) used when calling itself recursively",
                    "type": "Object"
                }
            ],
            "example": [
                " \n\t\tmerge(\"a\", {a:{a:\"s\"},__proto__:{a:{a:1, b:2, c:3}}})\n\t\t//returns {a:{a:\"s\", b:2, c:3},__proto__:{a:{a:1, b:2, c:3}}}"
            ],
            "return": {
                "description": "object : same object with property (name) merged",
                "type": "Object"
            },
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 771,
            "description": "Javascript setTimout function",
            "example": [
                "\n \tdelay(function(){}, 1000, scope);"
            ],
            "itemtype": "method",
            "name": "delay",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "timeout",
                    "description": "miliseconds",
                    "type": "Integer"
                },
                {
                    "name": "args",
                    "description": "pass to delay function",
                    "type": "Any"
                },
                {
                    "name": "scope",
                    "description": "(optional) scope of the callback function. Defaults to: window",
                    "type": "Object"
                }
            ],
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 786,
            "description": "clear the interval running by id",
            "itemtype": "method",
            "name": "clearInterval",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 799,
            "description": "set an interval and prevent any duplicates",
            "itemtype": "method",
            "name": "setInterval",
            "params": [
                {
                    "name": "id",
                    "description": "(optional)",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "timeout",
                    "description": "miliseconds",
                    "type": "Integer"
                },
                {
                    "name": "scope",
                    "description": "scope to apply to the callback",
                    "type": "Object"
                }
            ],
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 823,
            "description": "use Firebrick.utils:setInterval()",
            "itemtype": "method",
            "name": "int_applyInterval",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "(optional)",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "interval",
                    "description": "",
                    "type": "Interger"
                },
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "id",
                "type": "String"
            },
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 850,
            "description": "Check whether interval already exists",
            "itemtype": "method",
            "name": "isIntervalRunning",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "interval function",
                "type": "Object"
            },
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 859,
            "description": "Basic clone from one object to a new one object",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "object",
                    "description": "object you wish to clone",
                    "type": "Object"
                },
                {
                    "name": "config",
                    "description": "new properties you wish to add to the clone",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "cloned object",
                "type": "Object"
            },
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 877,
            "description": "Get a script/file from path",
            "example": [
                " \n\trequire(\"MyApp.controller.MyController\", function(){}, true, \"html\", \"js\");"
            ],
            "itemtype": "method",
            "name": "require",
            "params": [
                {
                    "name": "name",
                    "description": "MyApp.controller.MyController",
                    "type": "String, Array of Strings"
                },
                {
                    "name": "callback",
                    "description": "(optional) called when last require has completed or failed",
                    "type": "Function"
                },
                {
                    "name": "async",
                    "description": "[default=true]",
                    "type": "Boolean"
                },
                {
                    "name": "data_type",
                    "description": "[default='script'] jQuery ajax datatype",
                    "type": "String"
                },
                {
                    "name": "ext",
                    "description": "[defaults='js'] file extension.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the files that were eventually loaded",
                "type": "Array of Strings"
            },
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 946,
            "description": "Converts a name like \"MyApp.controller.MyController\" to a path MyApp/controller/MyController",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "getPathFromName",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "ext",
                    "description": "[default='js']",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 982,
            "itemtype": "property",
            "name": "_globalC",
            "access": "private",
            "tagname": "",
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 987,
            "description": "returns a unique id: http://stackoverflow.com/a/19223188",
            "itemtype": "method",
            "name": "uniqId",
            "return": {
                "description": "unique id",
                "type": "String"
            },
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1000,
            "description": "load css file and append to HEAD",
            "itemtype": "method",
            "name": "loadCSS",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Utils",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1019,
            "description": "use get/setLang() to change the language",
            "itemtype": "property",
            "name": "lang",
            "access": "private",
            "tagname": "",
            "type": "{ko.observable}",
            "default": "ko.observable(\"en\")",
            "class": "Languages",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1027,
            "description": "store of keys ko.observale",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "keys",
            "type": "{ko.observable}",
            "default": "ko.observable({})",
            "class": "Languages",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1035,
            "description": "initial the language keys",
            "example": [
                "\n\tFirebrick.ready({lang:...}) //to set language"
            ],
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "lang",
                    "description": "string = url to load",
                    "type": "String, Store"
                }
            ],
            "class": "Languages",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1061,
            "description": "get text by its key",
            "itemtype": "method",
            "name": "getByKey",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Languages",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1074,
            "description": "set the app language",
            "itemtype": "method",
            "name": "setLang",
            "params": [
                {
                    "name": "langKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Languages",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1082,
            "description": "get Lang as string",
            "itemtype": "method",
            "name": "getLang",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Languages",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1090,
            "description": "available langages",
            "itemtype": "method",
            "name": "allLanguages",
            "return": {
                "description": "all possible languages",
                "type": "Array of Strings"
            },
            "class": "Languages",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1110,
            "description": "Event registry",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "eventRegistry",
            "type": "{Object} map",
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1117,
            "description": "Event Counter - used to make callbacks by id",
            "itemtype": "method",
            "name": "eventCounter",
            "type": "{Integer}",
            "access": "private",
            "tagname": "",
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1124,
            "description": "add a listener to a specific event by name",
            "example": [
                " \n\t\taddListener(\"myEvent\", myFunction(){}, this);",
                "\n\t\taddListener({\n\t\t\t\t\t\t\"myEvent\": function(){},\n\t\t\t\t\t\t\"mySecondEvent\": function(){},\n\t\t\t\t\t\tscope: this\n\t\t\t\t\t})"
            ],
            "itemtype": "method",
            "name": "addListener",
            "params": [
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String, Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "(optional) scope in which the listener is fired in",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the function with the assigned callbackId;",
                "type": "Function"
            },
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1165,
            "description": "Use Firebrick.events:addListeners",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "addListener_internal",
            "example": [
                "\n\t addListeners_internal({\n\t\t\t\t\t\"myEvent\": function(){},\n\t\t\t\t\t\"mySecondEvent\": function(){},\n\t\t\t\t\tscope: this\n\t\t\t\t})"
            ],
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1184,
            "description": "remove listener by eventName and function",
            "example": [
                "\n\t\tremoveListener(\"myEvent\", function);"
            ],
            "itemtype": "method",
            "name": "removeListener",
            "params": [
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "funct",
                    "description": "(optional) if non given will remove all listeners for event",
                    "type": "Function"
                }
            ],
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1213,
            "description": "Fire an event by name",
            "example": [
                " \n\t\tfireEvent(\"eventFired\", 1, \"test\", false);"
            ],
            "itemtype": "method",
            "name": "fireEvent",
            "params": [
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "arguments",
                    "description": "arguments passed to event when fired",
                    "type": "Any..."
                }
            ],
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1241,
            "description": "creates the event object to be passed as argument when event is fired",
            "itemtype": "method",
            "name": "createEventData",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "event object",
                "type": "Object"
            },
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1252,
            "description": "removes the listener it called from within",
            "example": [
                ""
            ],
            "itemtype": "method",
            "name": "removeSelf\n\t\tevent.removeSelf();",
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1265,
            "description": "Define events and their callbacks, similar to $(selector).on(eventname, callback)",
            "example": [
                "\n\t\ton(\"click\", \"a.mylink\", function(){}, newScope)",
                " \n\t\ton({\n\t\t\t\t\t\t\"a.link\":{\n\t\t\t\t\t\t\tclick:function(){},\n\t\t\t\t\t\t\tmouseover:function(){}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscope:this\n\t\t\t\t\t})"
            ],
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "eventName",
                    "description": "string =  same as jquery selector(s)",
                    "type": "String, Object"
                },
                {
                    "name": "selector",
                    "description": "(optional) use if first arg is not an object",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "(optional) use if first arg is not an object",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "(optional) change scope on callback function use if first arg is not an object",
                    "type": "Object"
                }
            ],
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1292,
            "description": "Makes use of the jQuery .off() function",
            "example": [
                "\n\t\toff( \"click\", \"#theone\", function(){} )"
            ],
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "the function used in on()",
                    "type": "Function"
                }
            ],
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1304,
            "description": "use Firebrick.events:on",
            "example": [
                " \n\t\ton_internal({\n\t\t\t\t\t\t\t\"a.link\":{\n\t\t\t\t\t\t\t\tclick:function(){},\n\t\t\t\t\t\t\t\tmouseover:function(){}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tscope:this\n\t\t\t\t\t\t}"
            ],
            "itemtype": "method",
            "name": "on_internal",
            "params": [
                {
                    "name": "object",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1328,
            "description": "use Firebrick.events:on",
            "itemtype": "method",
            "name": "register_on_event",
            "access": "private",
            "tagname": "",
            "class": "Events",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1354,
            "description": "creates a new Firebrick.store.Base store to be used OR if a name and config are supplied, then Firebrick.create() is called",
            "example": [
                "\n\t\t//creates a new class Firebrick.store.Base to be used\n\t\tcreateStore({\n\t\t\t\t\t\t\tdata:{name:\"bob\"}\n\t\t\t\t\t\t}); ",
                " \n\t\tcreateStore(\"MyApp.store.MyStore\", {}); //Firebrick.create() is called",
                " \n\t\tcreateStore() //returns a Store class to be used"
            ],
            "itemtype": "method",
            "name": "createStore",
            "params": [
                {
                    "name": "name",
                    "description": "if string, then Firebrick:create is called",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "data to config the class with - called in conjuction when name is set",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Firebrick.store.Base",
                "type": "Object"
            },
            "class": "Data.Store",
            "module": "Firebrick",
            "namespace": "Data"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1393,
            "description": "Basic view configurations when defining/creating a view",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "basicStoreConfigurations",
            "params": [
                {
                    "name": "config",
                    "description": "(optional)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Data.Store",
            "module": "Firebrick",
            "namespace": "Data"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1408,
            "description": "Used by Firebrick.store.Base:load",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "loadStore",
            "params": [
                {
                    "name": "store",
                    "description": "Firebrick.store.Base object",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "async",
                            "description": "[default=store.async]",
                            "type": "Boolean"
                        },
                        {
                            "name": "callback",
                            "description": "[store, jsonObject, status, response]",
                            "type": "Function"
                        },
                        {
                            "name": "scope",
                            "description": "",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "return": {
                "description": "store",
                "type": "Object"
            },
            "class": "Data.Store",
            "module": "Firebrick",
            "namespace": "Data"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1454,
            "description": "Submit the given store with its data to the specified url",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "submit",
            "params": [
                {
                    "name": "store",
                    "description": "//Firebricks.store.Base class",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "(optional) function to call on store submission success",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "store",
                "type": "Object"
            },
            "class": "Data.Store",
            "module": "Firebrick",
            "namespace": "Data"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1502,
            "description": "set route definitions",
            "example": [
                "\n\t\tFirebrick.router.set({\n\t\t\t\"users/abc\": function(){},\n\t\t\t\"contact\": function(){}\n\t\t})",
                "\n\t\tFirebrick.router.set(function(){}) //call function regardless of route"
            ],
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Router",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1537,
            "description": "Call a function when the hash changes on the site\nuse Firebrick.route:set",
            "example": [
                "\n\t\t\t\t\tFirebrick.router.onHashChange(function(){\n\t\t\t\t\t\t//something happens\n\t\t\t\t\t})"
            ],
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "onHashChange",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "jQuery object",
                "type": "Object"
            },
            "class": "Router",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1554,
            "description": "Check whether the pattern or hash is present",
            "example": [
                "\n\tFirebrick.router.is(\"#/completed\") // returns true or false"
            ],
            "itemtype": "method",
            "name": "is",
            "params": [
                {
                    "name": "pattern",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Router",
            "module": "Firebrick"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1579,
            "description": "unlike init, this is called when defining a class",
            "itemtype": "method",
            "name": "constructor",
            "params": [
                {
                    "name": "name",
                    "description": "- class name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1591,
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "self"
            },
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1613,
            "itemtype": "property",
            "name": "mixins",
            "type": "{String|Object|[String]}",
            "default": "null",
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1619,
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_idPrefix",
            "type": "{String}",
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1625,
            "description": "use Firebrick.class.Base:getClassId",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_classId",
            "type": "{String}",
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1632,
            "description": "event registry",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "localEventRegistry",
            "type": "{Object} map",
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1639,
            "description": "get the id for the current class",
            "itemtype": "method",
            "name": "getClassId",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1652,
            "description": "shorthand for defining class listeners so you don't have to create the init function and use this.on()",
            "example": [
                "\n\t\t listeners:{\n\t\t\t\t\"ready\": function(){},\n\t\t\t\tscope:this\n\t\t\t}"
            ],
            "itemtype": "property",
            "name": "listeners",
            "type": "{Object} map",
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1663,
            "description": "register a listener to this object, when the object fires a specific event",
            "example": [
                " \n\ton(\"someEvent\", callback)",
                " \n\ton({\n    \"someevent\": callback,\n    \"someotherevent\": callback1\n\t})"
            ],
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "(optional)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1715,
            "description": "remove a listener that was registered with .on()",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "the function that was used when registering the event with .on()",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1734,
            "description": "Fire an event on this object",
            "itemtype": "method",
            "name": "fireEvent",
            "params": [
                {
                    "name": "eventName",
                    "description": "name of the event to fire",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "(optional)",
                    "type": "Any..."
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1753,
            "description": "pass an event to another object - fire the same event on the second object with all the arguments of the first",
            "itemtype": "method",
            "name": "passEvent",
            "params": [
                {
                    "name": "argument",
                    "description": ":: arguments array"
                }
            ],
            "example": [
                "\n\t\t \tclassOne.on(\"someEvent\", function(){\n\t\t\t\t//fire the same event on the second object with all the arguments of the first\n\t\t \t\tclassTwo.passEvent(arguments);\t//same as classTwo.fireEvent(\"someEvent\", arg1, arg2, arg3, ...)\n\t\t\t});"
            ],
            "return": {
                "description": "value from fireEvent",
                "type": "Any"
            },
            "class": "class.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1776,
            "description": "set when the view is loaded by the ajax request",
            "itemtype": "property",
            "name": "tpl",
            "type": "{String}",
            "default": "\"\"",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1783,
            "description": "bind a store or plain data to the view",
            "itemtype": "property",
            "name": "store",
            "type": "{String|Store Object}",
            "default": "null",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1790,
            "description": "parsed html using the tpl and data",
            "itemtype": "property",
            "name": "html",
            "type": "{String} html",
            "default": "\"\"",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1797,
            "description": "Target to which to render the html content",
            "itemtype": "property",
            "name": "target",
            "type": "{String|Object} jquery selector || jquery object",
            "default": "null",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1804,
            "description": "render the view on class creation",
            "itemtype": "property",
            "name": "autoRender",
            "type": "{Boolean}",
            "default": "true",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1811,
            "description": "controller to bind to the view",
            "itemtype": "property",
            "name": "controller",
            "type": "{String|Object} name of the controller || controller class itself",
            "default": "null",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1818,
            "description": "loading template - loaded into target is showLoading == true",
            "itemtype": "property",
            "name": "loadingTpl",
            "type": "{String}",
            "default": "Firebrick.templates:loadingTpl",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1825,
            "description": "whether the loader is being shown or not",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "loading",
            "type": "{Boolean}",
            "default": "false",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1833,
            "description": "whether to show that the view is loading",
            "itemtype": "property",
            "name": "showLoading",
            "type": "{Boolean}",
            "default": "true",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1840,
            "description": "State the view is current in. \"initial\", \"rendered\"",
            "itemtype": "property",
            "name": "_state",
            "type": "{String}",
            "access": "private",
            "tagname": "",
            "default": "\"initial\"",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1848,
            "description": "define subviews to load after creation of this view",
            "example": [
                " \n\t\tsubViews: MyApp.view.MyView",
                " \n\t\tsubViews: [\"MyApp.view.MyView\", \"MyApp.view.MyView1\"]",
                " \n\t\tsubViews: Firebrick.defineView(...)",
                " \n\t\tsubViews: [Firebrick.defineView(...), Firebrick.defineView(...)]"
            ],
            "itemtype": "property",
            "name": "subViews",
            "type": "{String|Array of Strings|Object|Array of Objects}",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1862,
            "description": "boolean whether class is view",
            "itemtype": "property",
            "name": "isView",
            "access": "private",
            "tagname": "",
            "type": "{Boolean}",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1869,
            "description": "Extensions of the view files",
            "itemtype": "property",
            "name": "viewExtension",
            "type": "{String}",
            "default": "\"html\"",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1876,
            "description": "whether or not the template is to load asyncronously",
            "itemtype": "property",
            "name": "async",
            "type": "{Boolean}",
            "default": "true",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1883,
            "description": "used in conjuction with Firebrick.ui",
            "itemtype": "property",
            "name": "items",
            "type": "{Object}",
            "default": "null",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1890,
            "description": "whether to append or overwrite the content of the target",
            "itemtype": "property",
            "name": "appendContent",
            "type": "{Boolean}",
            "default": "false",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1897,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_init",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1940,
            "description": "Called on creation",
            "itemtype": "method",
            "name": "init",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1960,
            "description": "Returns the store linked to the view",
            "itemtype": "method",
            "name": "getStore",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1967,
            "description": "Returns data store data as object",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1975,
            "description": "Construct the view with template and data binding",
            "itemtype": "method",
            "name": "initView",
            "return": {
                "description": "self",
                "type": "Object"
            },
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1990,
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "initSubViews",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 1997,
            "itemtype": "method",
            "name": "getTarget",
            "return": {
                "description": "jquery object",
                "type": "Object"
            },
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2004,
            "description": "Called by view.Base:render()",
            "itemtype": "method",
            "name": "unbind",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2017,
            "description": "Called by view.Base:render()",
            "itemtype": "method",
            "name": "bind",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2041,
            "description": "Calls renderTo without parameters",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "self",
                "type": "Object"
            },
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2066,
            "itemtype": "method",
            "name": "setDisposeCallback",
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2076,
            "description": "called by view.Base:setDisposeCallback",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "unbound",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2085,
            "description": "show target view.Base:getTarget",
            "itemtype": "method",
            "name": "show",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2096,
            "description": "hide target view.Base:getTarget",
            "itemtype": "method",
            "name": "hide",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2107,
            "itemtype": "method",
            "name": "isVisible",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2118,
            "description": "Converts View data into a Store if not already done",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "initStore",
            "params": [
                {
                    "name": "Firebrick.view.Base",
                    "description": "object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2133,
            "description": "update the view with new data",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "data",
                    "description": "extra data you wish to pass to the view",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2144,
            "itemtype": "method",
            "name": "startLoader",
            "access": "private",
            "tagname": "",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2163,
            "itemtype": "method",
            "name": "stopLoader",
            "access": "private",
            "tagname": "",
            "class": "view.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2184,
            "description": "Called on creation",
            "itemtype": "method",
            "name": "init",
            "class": "controller.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2191,
            "itemtype": "property",
            "name": "app",
            "type": "{Object}",
            "example": [
                "\n\t\tcontroller.app.on(...)\n\t\tcontroller.app.listeners(...)"
            ],
            "class": "controller.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2200,
            "description": "see Firebrick.events:on",
            "itemtype": "property",
            "name": "on",
            "type": "{Function}",
            "class": "controller.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2209,
            "description": "see Firebrick.events:addListener",
            "itemtype": "property",
            "name": "listeners",
            "type": "{Function}",
            "class": "controller.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2227,
            "description": "Called on creation",
            "itemtype": "method",
            "name": "init",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2244,
            "description": "Default store configurations\nany types that jQuery allows in $.ajax()",
            "itemtype": "property",
            "name": "datatype",
            "type": "{String}",
            "default": "\"json\"",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2252,
            "description": "URL Config:",
            "itemtype": "property",
            "name": "url",
            "type": "{String, Object} string :: only a get store - i.e. 1-way store, get information from the server. object :: mutliple directional store - get and send information to and from the server",
            "example": [
                "\n\t url: \"/getusers.php\"",
                "\n\t\t url: {\n\t\t\t\t\t\tget:\"/getusers.php\",\n\t\t\t\t\t\tsubmit: \"/saveusers.php\"\n\t\t\t\t\t}\t"
            ],
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2265,
            "itemtype": "property",
            "name": "get",
            "type": "{String}",
            "default": "null",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2271,
            "itemtype": "property",
            "name": "submit",
            "type": "{String}",
            "default": "null",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2278,
            "description": "set the connection protocol, POST or GET for submit",
            "itemtype": "property",
            "name": "protocol",
            "type": "{String}",
            "default": "\"POST\"",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2285,
            "description": "Store status\n1. initial :: store has just been created\n2. preload :: store is just about to fire the $.ajax event\n3. any :: success status of $.ajax()",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "status",
            "type": "{String}",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2295,
            "description": "Simple property to check whether this object is a store",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "isStore",
            "type": "{Boolean}",
            "default": "true",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2303,
            "description": "Whether the data in the store has been initialised, ie. convert to records etc.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "dataInitialised",
            "type": "{Boolean}",
            "default": "false",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2311,
            "description": "load store on creation",
            "itemtype": "property",
            "name": "autoLoad",
            "type": "{Boolean}",
            "default": "false",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2318,
            "description": "data store - use setData()",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "data",
            "type": "{Object}",
            "default": "null",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2326,
            "description": "initial raw data that was passed when setting the store with setData() function",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_initialData",
            "type": "{Object}",
            "default": "null",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2334,
            "description": "default value",
            "itemtype": "property",
            "name": "async",
            "type": "{Boolean}",
            "default": "true",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2341,
            "description": "specify a root - used when calling getData()",
            "itemtype": "property",
            "name": "root",
            "type": "{String}",
            "default": "null",
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2348,
            "description": "Load the store - see data.store:loadStore",
            "example": [
                " \n\t\tload({\n\t\t\t\t\tcallback:function(){},\n\t\t\t\t\tscope:this //scope for callback\n\t\t\t\t})"
            ],
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2362,
            "description": "Returns the store data attribute",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "store data",
                "type": "Object"
            },
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2376,
            "description": "provide the raw data",
            "itemtype": "method",
            "name": "getRawData",
            "params": [
                {
                    "name": "initial",
                    "description": "[default=false] (optional) set to true if you want the original data passed to setData() - if left out or false - it will parse the ko-ed data back to a JS object",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2391,
            "description": "Converts a json object into stores with records",
            "itemtype": "method",
            "name": "setData",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "self",
                "type": "Object"
            },
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2418,
            "description": "Submit the store data to the specified url.submit path\nsee data.store:submit",
            "itemtype": "method",
            "name": "submit",
            "return": {
                "description": "self",
                "type": "Object"
            },
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2427,
            "description": "convert store data to a plain object",
            "itemtype": "method",
            "name": "toPlainObject",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2436,
            "description": "Convert store data to json string",
            "itemtype": "method",
            "name": "toJson",
            "return": {
                "description": "json",
                "type": "String"
            },
            "class": "store.Base",
            "module": "Firebrick.class"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2451,
            "itemtype": "property",
            "name": "Firebrick",
            "type": "{Object}",
            "class": "window",
            "module": "Global"
        },
        {
            "file": "src\\firebrick.js",
            "line": 2457,
            "itemtype": "property",
            "name": "fb",
            "type": "{Object}",
            "class": "window",
            "module": "Global"
        }
    ],
    "warnings": []
}